#include <stdio.h>
#include <math.h>
#include <mpi.h>
#include <cuda.h>


#define FM 398601.3
#define R0 6378.155
#define RADIAN 0.017453292519943294444444444444444

__device__ void associatedLegendrePolynomial(int N, int K, double X, double *P)
{
	int Pn, Pk;
	int i;
	int j;
	int k;
	int end;
	double multiply, power;
	double Pnk[22][22];
	for (i = 0; i <= N; i++)
	{
		for (j = 0; j <= K; j++)
		{
			Pnk[i][j] = 0;
		}
	}
	Pnk[0][0] = 1;
	Pnk[1][1] = sqrt(1 - X * X);
	for (i = 2; i <= N; i++)
	{
		for (j = 1; j <= K; j++)
		{
			if(i == j)
			{
				end = 2 * j - 1;
				multiply = 1.0;
				power = j / 2.0;
				for (k = 3; k <= end; k += 2)
				{
					multiply *= k;
				}
				Pnk[i][j] = multiply * pow(1 - (X * X), power);
			}
			else 
			{
				Pn = i - 1, Pk = j;
				Pnk[i][j] = ((2 * Pn + 1) * X * Pnk[Pn][Pk] - (Pn + Pk) * Pnk[Pn - 1][Pk]) / (Pn - Pk + 1);
			}
		}
	}
	*P = Pnk[N][K];
}

__device__ void legendrePolynomial(int N, double X, double *P)
{
	double P_0 = 1;
	double P_1 = X;
	if (N == 0)
	{
		*P = P_0;
	}
	else if (N == 1)
	{
		*P = P_1;
	}
	else
	{
		double P_I;
		int i;
		for(i = 2; i <= N; i++)
		{
			P_I=((2*i-1)*X*P_1-(i-1)*P_0)/i;
			P_0=P_1;
			P_1=P_I;
		}
		*P = P_I;
	}
}

__global__ void computeGravitationalPotentialU(double *R, double *U)
{
	int n, k;

	double resultLegendrePolynomial = 0;
	double resultAssociatedLegendrePolynomial = 0;

	double phi = blockIdx.x - 180;
	double lambda = threadIdx.x;

	phi = phi * RADIAN;
	lambda = lambda * RADIAN;

	double FMoverR = FM / *R;
	double R0overR = R0 / *R;

	double power1 = 0;
	double power2 = 0;
	double resultLegPol = 0;
	double resultALegPol = 0;

	double Jn[22] = {0, 0, 1082.628, -2.538, -1.593, -0.230, 0.502, -0.361, -0.118, -0.100, -0.354, 0.202, -0.042, -0.123, -0.073, -0.174, 0.187, 0.085, -0.231, -0.216, -0.005, 0.145};

	double Cnk[22][22] =
   	{
    	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 0
      	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 1
      	{0, -0.186987635955E-09, 0.243914352398E-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 2
      	{0, 0.202998882184E-05, 0.904627768605E-06, 0.721072657057E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 3
      	{0, -0.536321616971E-06, 0.350694105785E-06, 0.990771803829E-06, -0.188560802735E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 4
      	{0, -0.621012128528E-07, 0.652438297612E-06, -0.451955406071E-06, -0.295301647654E-06, 0.174971983203E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 5
      	{0, -0.760879384947E-07, 0.481732442832E-07, 0.571730990516E-07, -0.862142660109E-07, -0.267133325490E-06, 0.967616121092E-08, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 6
      	{0, 0.279872910488E-06, 0.329743816488E-06, 0.250398657706E-06, -0.275114355257E-06, 0.193765507243E-08, -0.358856860645E-06, 0.109185148045E-08, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 7
      	{0, 0.233422047893E-07, 0.802978722615E-07, -0.191877757009E-07, -0.244600105471E-06, -0.255352403037E-07, -0.657361610961E-07, 0.672811580072E-07, -0.124092493016E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 8
      	{0, 0.143387502749E-06, 0.222288318564E-07, -0.160811502143E-06, -0.900179225336E-08, -0.166165092924E-07, 0.626941938248E-07, -0.118366323475E-06, 0.188436022794E-06, -0.477475386132E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 9
      	{0, 0.835115775652E-07, -0.942413882081E-07, -0.689895048176E-08, -0.840764549716E-07, -0.493395938185E-07, -0.375885236598E-07, 0.811460540925E-08, 0.404927981694E-07, 0.125491334939E-06, 0.100538634409E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 10
      	{0, 0.151687209933E-07, 0.186309749878E-07, -0.309871239854E-07, -0.389580205051E-07, 0.377848029452E-07, -0.118676592395E-08, 0.411565188074E-08, -0.598410841300E-08, -0.314231072723E-07, -0.521882681927E-07, 0.460344448746E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 11
      	{0, -0.540654977836E-07, 0.142979642253E-07, 0.393995876403E-07, -0.686908127934E-07, 0.309411128730E-07, 0.341523275208E-08, -0.186909958587E-07, -0.253769398865E-07, 0.422880630662E-07, -0.617619654902E-08, 0.112502994122E-07, -0.249532607390E-08, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 12
      	{0, -0.513569699124E-07, 0.559217667099E-07, -0.219360927945E-07, -0.313762599666E-08, 0.590049394905E-07, -0.359038073075E-07, 0.253002147087E-08, -0.983150822695E-08, 0.247325771791E-07, 0.410324653930E-07, -0.443869677399E-07, -0.312622200222E-07, -0.612759553199E-07, 0, 0, 0, 0, 0, 0, 0, 0}, // 13
      	{0, -0.186968616381E-07, -0.367789379502E-07, 0.358875097333E-07, 0.183865617792E-08, 0.287344273542E-07, -0.194810485574E-07, 0.375003839415E-07, -0.350946485865E-07, 0.320284939341E-07, 0.390329180008E-07, 0.153970516502E-07, 0.840829163869E-08, 0.322147043964E-07, -0.518980794309E-07, 0, 0, 0, 0, 0, 0, 0}, // 14
     	{0, 0.100817268177E-07, -0.213942673775E-07, 0.521392929041E-07, -0.408150084078E-07, 0.124935723108E-07, 0.331211643896E-07, 0.596210699259E-07, -0.322428691498E-07, 0.128788268085E-07, 0.104688722521E-07, -0.111675061934E-08, -0.323962134415E-07, -0.283933019117E-07, 0.519168859330E-08, -0.190930538322E-07, 0, 0, 0, 0, 0, 0}, // 15
      	{0, 0.258360856231E-07, -0.233671404512E-07, -0.336019429391E-07, 0.402316284314E-07, -0.129501939245E-07, 0.140239252323E-07, -0.708412635136E-08, -0.209018868094E-07, -0.218588720643E-07, -0.117529900814E-07, 0.187574042592E-07, 0.195400194038E-07, 0.138196369576E-07, -0.193182168856E-07, -0.145149060142E-07, -0.379671710746E-07, 0, 0, 0, 0, 0}, // 16
      	{0, -0.254177575118E-07, -0.195988656721E-07, 0.564123066224E-08, 0.707457075637E-08, -0.154987006052E-07, -0.118194012847E-07, 0.242149702381E-07, 0.388442097559E-07, 0.381356493231E-08, -0.388216085542E-08, -0.157356600363E-07, 0.288013010655E-07, 0.165503425731E-07, -0.141983872649E-07, 0.542100361657E-08, -0.301992205043E-07, -0.343086856041E-07, 0, 0, 0, 0}, // 17
      	{0, 0.721098449649E-08, 0.140631771205E-07, -0.507232520873E-08, 0.548759308217E-07, 0.548710485555E-08, 0.146570755271E-07, 0.675812328417E-08, 0.307619845144E-07, -0.188470601880E-07, 0.527535358934E-08, -0.729628518960E-08, -0.297449412422E-07, -0.627919717152E-08, -0.815605336410E-08, -0.405003412879E-07, 0.104141042028E-07, 0.358771586841E-08, 0.312351953717E-08, 0, 0, 0}, // 18
      	{0, -0.759903885319E-08, 0.353541528655E-07, -0.974103607309E-08, 0.157039009057E-07, 0.109629213379E-07, -0.408745178658E-08, 0.478275337044E-08, 0.294908364280E-07, 0.307961427159E-08, -0.338415069043E-07, 0.160443652916E-07, -0.247106581581E-08, -0.744717379980E-08, -0.470502589215E-08, -0.176580549771E-07, -0.216950096188E-07, 0.290444936079E-07, 0.348382199593E-07, -0.257349349430E-08, 0, 0}, // 19
      	{0, 0.516303125218E-08, 0.198831128238E-07, -0.362601436785E-08, 0.242238118652E-08, -0.107042562564E-07, 0.110474837570E-07, -0.210090282728E-07, 0.442419185637E-08, 0.178846216942E-07, -0.325394919988E-07, 0.138992707697E-07, -0.635750600750E-08, 0.275222725997E-07, 0.115841169405E-07, -0.260130744291E-07, -0.124137147118E-07, 0.436909667960E-08, 0.151842883022E-07, -0.314942002852E-08, 0.401448327968E-08, 0}, // 20
      	{0, -0.161000670141E-07, -0.654460482558E-08, 0.195491995260E-07, -0.576604339239E-08, 0.258856303016E-08, -0.140168810589E-07, -0.864357168475E-08, -0.170477278237E-07, 0.164489062394E-07, -0.109928976409E-07, 0.699300364214E-08, -0.319300109594E-08, -0.189854524590E-07, 0.203580785674E-07, 0.175530220278E-07, 0.786969109367E-08, -0.699484489981E-08, 0.259643291521E-07, -0.273741636410E-07, -0.268682473584E-07, 0.830374873932E-08}, // 21
   	};

	double Snk[22][22] =
   	{
    	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 0
      	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 1
      	{0, 0.119528012031E-08, -0.140016683654E-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 2
      	{0, 0.248513158716E-06, -0.619025944205E-06, 0.141435626958E-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 3
      	{0, -0.473440265853E-06, 0.662671572540E-06, -0.200928369177E-06, 0.308853169333E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 4
      	{0, -0.944226127525E-07, -0.323349612668E-06, -0.214847190624E-06, 0.496658876769E-07, -0.669384278219E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 5
      	{0, 0.262890545501E-07, -0.373728201347E-06, 0.902694517163E-08, -0.471408154267E-06, -0.536488432483E-06, -0.237192006935E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 6
      	{0, 0.954336911867E-07, 0.930667596042E-07, -0.217198608738E-06, -0.123800392323E-06, 0.177377719872E-07, 0.151789817739E-06, 0.244415707993E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 7
      	{0, 0.590060493411E-07, 0.654175425859E-07, -0.863454445021E-07, 0.700233016934E-07, 0.891462164788E-07, 0.309238461807E-06, 0.747440473633E-07, 0.120533165603E-06, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 8
      	{0, 0.216834947618E-07, -0.322196647116E-07, -0.742287409462E-07, 0.194666779475E-07, -0.541113191483E-07, 0.222903525945E-06, -0.965152667886E-07, -0.308566220421E-08, 0.966412847714E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 9
      	{0, -0.131314331796E-06, -0.515791657390E-07, -0.153768828694E-06, -0.792806255331E-07, -0.505370221897E-07, -0.795667053872E-07, -0.336629641314E-08, -0.918705975922E-07, -0.376516222392E-07, -0.240148449520E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 10
      	{0, -0.268604146166E-07, -0.990693862047E-07, -0.148131804260E-06, -0.636666511980E-07, 0.494736238169E-07, 0.344769584593E-07, -0.898252808977E-07, 0.243989612237E-07, 0.417731829829E-07, -0.183364561788E-07, -0.696662308185E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 11
      	{0, -0.435675748979E-07, 0.320975937619E-07, 0.244264863505E-07, 0.415081109011E-08, 0.782536279033E-08, 0.391765484449E-07, 0.356131849382E-07, 0.169361024629E-07, 0.252692598301E-07, 0.308375794212E-07, -0.637946501558E-08, -0.111780601900E-07, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 12
      	{0, 0.390510386685E-07, -0.627337565381E-07, 0.974829362237E-07, -0.119627874492E-07, 0.664975958036E-07, -0.657280613686E-08, -0.621470822331E-08, -0.104740222825E-07, 0.452870369936E-07, -0.368121029480E-07, -0.476507804288E-08, 0.878405809267E-07, 0.685261488594E-07, 0, 0, 0, 0, 0, 0, 0, 0}, // 13
      	{0, 0.294747542249E-07, -0.516779392055E-08, 0.204618827833E-07, -0.226780613566E-07, -0.163882249728E-07, 0.247831272781E-08, -0.417291319429E-08, -0.153515265203E-07, 0.288804922064E-07, -0.144308452469E-08, -0.390548173245E-07, -0.311327189117E-07, 0.451897224960E-07, -0.481506636748E-08, 0, 0, 0, 0, 0, 0, 0}, // 14
      	{0, 0.109773066324E-07, -0.308914875777E-07, 0.172892926103E-07, 0.650174707794E-08, 0.808375563996E-08, -0.368246004304E-07, 0.531841171879E-08, 0.221523579587E-07, 0.375629820829E-07, 0.147222147015E-07, 0.180996198432E-07, 0.155243104746E-07, -0.422066791103E-08, -0.243752739666E-07, -0.471139421558E-08, 0, 0, 0, 0, 0, 0}, // 15
      	{0, 0.325447560859E-07, 0.288799363439E-07, -0.220418988010E-07, 0.483837716909E-07, -0.319458578129E-08, -0.350760208303E-07, -0.881581561131E-08, 0.500527390530E-08, -0.395012419994E-07, 0.114211582961E-07, -0.303161919925E-08, 0.666983574071E-08, 0.102778499508E-08, -0.386174893776E-07, -0.327443078739E-07, 0.302155372655E-08, 0, 0, 0, 0, 0}, // 16
      	{0, -0.306630529689E-07, 0.649265893410E-08, 0.678327095529E-08, 0.249437600834E-07, 0.660021551851E-08, -0.289770975177E-07, -0.422222973697E-08, 0.358904095943E-08, -0.281466943714E-07, 0.181328176508E-07, 0.106560649404E-07, 0.203450136084E-07, 0.204667531435E-07, 0.114948025244E-07, 0.532610369811E-08, 0.365331918531E-08, -0.198523455381E-07, 0, 0, 0, 0}, // 17
      	{0, -0.388714473013E-07, 0.100093396253E-07, -0.490865931335E-08, -0.135267117720E-08, 0.264338629459E-07, -0.136438019951E-07, 0.688577494235E-08, 0.417827734107E-08, 0.368302736953E-07, -0.466091535881E-08, 0.195215208020E-08, -0.164497878395E-07, -0.348383939938E-07, -0.128636585027E-07, -0.202684998021E-07, 0.661468817624E-08, 0.448065587564E-08, -0.109906032543E-07, 0, 0, 0}, // 18
      	{0, 0.126835472605E-08, -0.131346303514E-08, 0.150662259043E-08, -0.761677383811E-08, 0.283172176438E-07, 0.186219430719E-07, -0.717283455900E-08, -0.993037002883E-08, 0.694110477214E-08, -0.737981767136E-08, 0.996673453483E-08, 0.916852310642E-08, -0.282584466742E-07, -0.129526697983E-07, -0.140350990039E-07, -0.724534721567E-08, -0.153456531070E-07, -0.954146344917E-08, 0.483151822363E-08, 0, 0}, // 19
      	{0, 0.669626726966E-08, 0.175183843257E-07, 0.379590724141E-07, -0.211057611874E-07, -0.771860083169E-08, -0.217720365898E-08, -0.223491503969E-10, 0.183035804593E-08, -0.663940865358E-08, -0.512308873621E-08, -0.187706454942E-07, 0.180260853103E-07, 0.690887077588E-08, -0.143176160143E-07, -0.784379672413E-09, -0.277500443628E-09, -0.137420446198E-07, -0.808429903142E-09, 0.106505202245E-07, -0.120450644785E-07, 0}, // 20
      	{0, 0.284359400791E-07, 0.378474868508E-08, 0.226286963716E-07, 0.194493782631E-07, 0.170850368669E-08, -0.273814826381E-11, 0.442612277119E-08, 0.150711192630E-08, 0.830113196365E-08, -0.146913794684E-08, -0.353590565124E-07, 0.145786917947E-07, 0.140514791436E-07, 0.755772462840E-08, 0.104533886832E-07, -0.656089715279E-08, -0.736064901147E-08, -0.111560806130E-07, 0.163958190052E-07, 0.162086057168E-07, -0.375546121742E-08}, // 21
   	};


	for(n = 2; n <= 9; n++)
	{
		power1 = pow(R0overR, n);
		legendrePolynomial(n, sin(phi), &resultLegPol);
		resultLegendrePolynomial += resultLegPol * power1 * Jn[n] * 0.000001;
		for (k = 1; k <= n; k++)
		{
			power2 = pow(-1.0, k*1.0);
			associatedLegendrePolynomial(n, k, sin(phi), &resultALegPol);
			resultAssociatedLegendrePolynomial += power1 * power2 * resultALegPol * ((Cnk[n][k] * cos(k * lambda)) + (Snk[n][k] * sin(k * lambda)));
		}
	}
	U[threadIdx.x + (blockIdx.x * 360)] = FMoverR * (1 - resultLegendrePolynomial + resultAssociatedLegendrePolynomial);
}

int main(int argc, char *argv[])
{
	int rank, pSize;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &pSize);

	int i, j;
	int countDevice;

	cudaGetDeviceCount(&countDevice);
	
	double r = 6778.155;
	double *dev_r;

	double U[360 * 360];
	double *dev_U;

	double steps;

	size_t size = sizeof(double);

	steps = 1.0 / pSize;

	cudaSetDevice(rank % countDevice);

	cudaMalloc((void **) &dev_r, size);
	cudaMalloc((void **) &dev_U, size * 360 * 360);	

	for (r = 6778.155 + rank * steps; r < 6778.155 + (rank + 1) * steps; r += 0.001)
	{
		cudaMemcpy(dev_r, &r, size, cudaMemcpyHostToDevice);

		computeGravitationalPotentialU<<<360, 360>>>( dev_r, dev_U);

		cudaMemcpy(&U, dev_U, size * 360 * 360, cudaMemcpyDeviceToHost);

		for (j = 0; j < 360; j++)
		{
			for (i = 0; i < 360; i++)
			{
				printf("rank = %i, r = %f, p = %i l = %i U =  %.20f\n", rank, r, i, j, U[i + (j * 360)]);
			}
		}
	}

	cudaFree(dev_r);
	cudaFree(dev_U);

	MPI_Finalize();
	
	return 0;
}
